model Appointment {
  id     String            @id @default(uuid())
  date   DateTime
  day    String
  hour   String
  motive String
  status AppointmentStatus

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  typeId String
  type   AppointmentType @relation(fields: [typeId], references: [id])

  specialtyId String
  specialty   Specialty @relation(fields: [specialtyId], references: [id])

  priceId String @default("")
  price   Price  @relation(fields: [priceId], references: [id])

  symptoms Symptom[] @relation("AppointmentSymptom")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  room        AppointmentRoom?
  rating      AppointmentRating?
  telemetry   AppointmentTelemetry?
  recipes     AppointmentRecipe?
  notes       AppointmentNote[]
  diagnostics Diagnostic[]
  documents   MedicalDocument[]
  treatments  Treatment[]
  orders      Order[]
  transcription Transcription?
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  PAYED
  READY
  STARTED
  CANCELLED
  MISSED_BY_PATIENT
  MISSED_BY_DOCTOR
  FINISHED
}

model AppointmentType {
  id    String @id @default(uuid())
  name  String
  color String @default("#000000")

  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Price        Price[]
}

model AppointmentRoom {
  id            String      @id @default(uuid())
  patientEnter  Boolean     @default(false)
  doctorEnter   Boolean     @default(false)
  appointmentId String      @unique
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
}

model AppointmentRating {
  id            String      @id @default(uuid())
  rating        Int
  comment       String?
  appointmentId String      @unique
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
}

model AppointmentTelemetry {
  id               String      @id @default(uuid())
  weight           Float?
  temperature      Float?
  heartRate        Float?
  bloodPressure    Float?
  imc              Float?
  respiratoryRate  Float?      @default(16)
  oxygenSaturation Float?      @default(98)
  appointmentId    String      @unique
  appointment      Appointment @relation(fields: [appointmentId], references: [id])
}

model AppointmentRecipe {
  id            String        @id @default(uuid())
  date          DateTime
  description   String
  appointmentId String        @unique
  appointment   Appointment   @relation(fields: [appointmentId], references: [id])
  MedicalTest   MedicalTest[]
}

model MedicalReference {
  id           String  @id @default(uuid())
  reason       String
  observations String?

  referencedId String
  referenced   Doctor @relation(fields: [referencedId], references: [id])
}

model AppointmentNote {
  id            String      @id @default(uuid())
  date          DateTime
  description   String
  isPublic      Boolean     @default(false)
  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
}

model Symptom {
  id   String @id @default(uuid())
  name String

  appointments Appointment[] @relation("AppointmentSymptom")
  diagnoses    Diagnostic[]  @relation("DiagnosticSymptom")
}
